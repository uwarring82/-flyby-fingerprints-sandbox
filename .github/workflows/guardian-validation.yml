name: Guardian Validation

on:
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  guardian_checks:
    name: Run Guardian Validation Suite
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e . -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Sanity check Guardian assets
        run: |
          test -f simulations/background_effects.py
          test -f simulations/null_validation.py
          test -f tests/guardian_tests.py

      - name: Run Guardian tests (blocking gate)
        run: |
          echo "🛡️ Running Guardian Validation Suite..."
          pytest -v tests/guardian_tests.py --tb=short
          echo "✅ Guardian validation passed - background safety verified"

      - name: Guardian (strict)
        id: guardian_strict
        continue-on-error: true
        run: |
          python scripts/guardian-cli.py --strict --summary-json > guardian_summary.json
          python -m json.tool guardian_summary.json > /tmp/guardian_summary.json
          mv /tmp/guardian_summary.json guardian_summary.json
          test -s guardian_summary.json

      - name: Upload Guardian summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: guardian-summary
          path: guardian_summary.json
          retention-days: 7

      - name: Enforce Guardian gate
        if: steps.guardian_strict.outcome != 'success'
        run: |
          echo "Guardian strict gate failed"
          exit 1
